class @CookieLaw
  cookieName: '<%= CookieLaw.cookie_name %>'
  acceptOnScroll: <%= CookieLaw.accept_on_scroll %>
  expires: <%= CookieLaw.expiration %>
  acceptOnAnyLink: <%= CookieLaw.accept_on_any_link %>
  scrollHeight: <%= CookieLaw.scroll_height %>
  currentCookie: null

  constructor: ->
    ($ document).ready =>
      if @policyAccepted()
        ($ document).trigger 'cl:ready'
        if typeof Turbolinks isnt 'undefined' and Turbolinks.supported
          ($ document).on 'page:change', ->
            ($ document).trigger 'cl:page_change'
      else
        @showPolicy()
        ($ document).trigger 'cl:not_accepted'
        @bindAcceptors()

  bindAcceptors: ->
    ($ document).on 'click', '#cl_close', (e) =>
      e.preventDefault()
      @acceptPolicy()

    if @acceptOnScroll
      ($ window).on 'scroll', =>
        if ($ window).scrollTop() > @scrollHeight
          @acceptPolicy()
    if @acceptOnAnyLink
      ($ document).on 'click', "a:not('.no_cl_accept, #cl_close')", @acceptPolicy

  unbindAcceptors: ->
    if @acceptOnScroll
      ($ window).off 'scroll', @acceptPolicy
    if @acceptOnAnyLink
      ($ document).off 'click', "a:not('.no_cl_accept, #cl_close')", @acceptPolicy

  policyAccepted: ->
    @currentCookie = Cookies.getJSON @cookieName
    @currentCookie? and @currentCookie.accepted is true

  acceptPolicy: (e) =>
    @unbindAcceptors()

    Cookies.set @cookieName,
      accepted: true
      at: new Date(),{
        expires: @expires
      }
    ($ document).trigger 'cl:ready'
    @hidePolicy()

  hidePolicy: ->
    ($ '#cl_banner').hide()

  showPolicy: ->
    ($ '#cl_banner').show()

@_cl_instance = new @CookieLaw()
